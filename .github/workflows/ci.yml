name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  NODE_ENV: test
  API_CLIENT_ID: approved-premises
  API_CLIENT_SECRET: clientsecret

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build üõ†Ô∏è"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version-file: '.node-version'
          cache: 'npm'

      - name: Installing dependencies
        run: npm ci

      - name: Typechecking the code
        run: npm run build

  type_checking:
    name: "Type check üîé"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version-file: '.node-version'
          cache: 'npm'

      - name: Installing dependencies
        run: npm ci

      - name: Typechecking the code
        run: npm run typecheck

  linting:
    name: "Linting üîé"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version-file: '.node-version'
          cache: 'npm'

      - name: Installing dependencies
        run: npm ci

      - name: Running Lint checks
        run: npm run lint

      - name: Running shell scripts linting checks
        run: npm run shellcheck

  helm_lint:
    name: "Helm config linting üîé"
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/test_helm_lint.yml@v2
    strategy:
      matrix:
        environments: [ 'dev', 'test', 'preprod', 'prod' ]

  unit_test:
    name: "Unit testing üß™"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version-file: '.node-version'
          cache: 'npm'

      - name: Installing dependencies
        run: npm ci

      - name: Running Unit tests
        run: npm run test:ci

      - name: Check coverage
        run: |
          npx nyc report -t ./coverage --reporter=text --reporter=text-summary
          npx nyc check-coverage -t ./coverage

  integration_test:
    name: "Integration testing üß™"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ci_node_index: [ 0, 1, 2, 3 ]
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version-file: '.node-version'
          cache: 'npm'

      - name: Installing dependencies
        run: npm ci

      - name: Building source
        run: npm run build

      - name: Downloading test reports from previous runs
        uses: dawidd6/action-download-artifact@v6
        with:
          branch: main
          if_no_artifact_found: 'ignore'
          allow_forks: false
          name: integration-test-junit-xml-reports-.*
          name_is_regexp: true
          path: tmp/junit-xml-reports-downloaded
        continue-on-error: true

      - name: Determining tests splitting by timing
        uses: r7kamura/split-tests-by-timings@v0
        id: split-tests
        with:
          reports: tmp/junit-xml-reports-downloaded
          glob: integration_tests/tests/**/*.cy.ts
          index: ${{ matrix.ci_node_index }}
          total: 4

      - name: Running Integration tests
        run: TEST_RUN_ARGS="--spec $(echo ${{ steps.split-tests.outputs.paths }} | sed -E 's/ /,/g')" npm run test:integration

      - name: Fix Cypress JUnit XML reports
        run: script/fix-cypress-junit-xml

      - name: Store Integration tests reports
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-junit-xml-reports-${{ matrix.ci_node_index }}
          path: test_results/cypress

      - name: Store Integration tests videos
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: integration-tests-videos-${{ matrix.ci_node_index }}
          path: integration_tests/videos

      - name: Store Integration tests screenshots
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: integration-tests-screenshots-${{ matrix.ci_node_index }}
          path: integration_tests/screenshots
