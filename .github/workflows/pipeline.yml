name: Pipeline [test -> build -> deploy]

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        type: choice
        required: true
        options:
          - dev
          # - preprod
          # - staging
          # - prod
        default: 'dev'
      version:
        description: Image version
        type: string
        required: true
      docker_registry:
        description: Docker registry
        required: true
        default: 'ghcr.io'
        type: choice
        options:
          - 'ghcr.io'
          - 'quay.io'
      registry_org:
        description: Docker registry organisation
        required: true
        default: 'ministryofjustice'
        type: choice
        options:
          - 'ministryofjustice'
          - 'hmpps'
      additional_docker_tag:
        description: Additional docker tag that can be used to specify stable tags
        required: false
        default: ''
        type: string
      push:
        description: Push docker image to registry flag
        required: true
        default: true
        type: boolean
      docker_multiplatform:
        description: docker multiplatform build or not
        required: true
        default: true
        type: boolean

permissions:
  contents: read
  packages: write

jobs:
  node_build:
    name: node build
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/node_build.yml@v1 # WORKFLOW_VERSION
    secrets: inherit

  unit_tests:
    name: "Unit testing ðŸ§ª"
    runs-on: [self-hosted, hmpps-github-actions-runner ]
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version-file: '.node-version'
          cache: 'npm'

      - name: Installing dependencies
        run: npm ci

      - name: Running Unit tests
        run: npm run test:ci

      - name: Check coverage
        run: |
          npx nyc report -t ./coverage --reporter=text --reporter=text-summary
          npx nyc check-coverage -t ./coverage

  integration_tests:
    name: "Integration testing ðŸ§ª"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ci_node_index:
          - 0
          - 1
          - 2
          - 3
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version-file: '.node-version'
          cache: 'npm'

      - name: Installing dependencies
        run: npm ci

      - name: Building source
        run: npm run build

      - uses: actions/download-artifact@v4
        with:
          name: junit-xml-reports-${{ matrix.ci_node_index }}
          path: tmp/integration-tests-reports
        continue-on-error: true

      - uses: r7kamura/split-tests-by-timings@v0
        id: split-tests
        with:
          reports: tmp/integration-tests-reports
          glob: integration_tests/tests/**/*.cy.ts
          index: ${{ matrix.ci_node_index }}
          total: 4

      - name: Running Integration tests
        run: TEST_RUN_ARGS="--spec $(echo ${{ steps.split-tests.outputs.paths }} | sed -E 's/ /,/g')" npm run test:integration

      - name: Store Integration tests reports
        uses: actions/upload-artifact@v4
        with:
          name: integration-tests-reports-${{ matrix.ci_node_index }}
          path: test_results/cypress
          retention-days: 5

      - name: Store Integration tests videos
        uses: actions/upload-artifact@v4
        with:
          name: integration-tests-videos-${{ matrix.ci_node_index }}
          path: integration_tests/videos
          retention-days: 5

      - name: Store Integration tests screenshots
        uses: actions/upload-artifact@v4
        with:
          name: integration-tests-screenshots-${{ matrix.ci_node_index }}
          path: integration_tests/screenshots
          retention-days: 5

  helm_lint:
    name: helm lint
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/test_helm_lint.yml@v1 # WORKFLOW_VERSION
    secrets: inherit
    with:
      environment: ${{ github.event.inputs.environment || 'dev' }}

  build:
    name: Build docker image from hmpps-github-actions
    needs:
      - unit_tests
      - integration_tests
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/docker_build.yml@v1 # WORKFLOW_VERSION
    with:
      docker_registry: ${{ inputs.docker_registry || 'ghcr.io' }}
      registry_org: ${{ inputs.registry_org || 'ministryofjustice' }}
      additional_docker_tag: ${{ inputs.additional_docker_tag }}
      push: ${{ inputs.push || true }}
      docker_multiplatform: ${{ inputs.docker_multiplatform || false }}

  # request_deploy:
  #   name: Request deployment approval
  #   needs:
  #     - build
  #     - helm_lint
  #   runs-on: ubuntu-latest
  #   environment: development
  #   steps:
  #     - uses: trstringer/manual-approval@v1 # this has to be a specific process...
  #       with:
  #         approvers: approved-premises-team
  #         minimum-approvals: 1
  #         issue-title: "Deploy branch to development environment"
  #         issue-body: "Please approve or deny the deployment this branch"
  #         exclude-workflow-initiator-as-approver: false

  deploy_dev:
    name: Deploy to the development environment
    needs:
      - build
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/deploy_env.yml@v1 # WORKFLOW_VERSION
    secrets: inherit
    with:
      environment: 'development'
      app_version: '${{ needs.build.outputs.app_version }}'
  # deploy_preprod:
  #   name: Deploy to pre-production environment
  #   needs: 
  #     - build
  #     - deploy_dev
  #   uses: ministryofjustice/hmpps-github-actions/.github/workflows/deploy_env.yml@v1 # WORKFLOW_VERSION
  #   secrets: inherit
  #   with:
  #     environment: 'preprod'
  #     app_version: '${{ needs.build.outputs.app_version }}'
  # deploy_prod:
  #   name: Deploy to production environment
  #   needs: 
  #     - build
  #     - deploy_preprod
  #   uses: ministryofjustice/hmpps-github-actions/.github/workflows/deploy_env.yml@v1 # WORKFLOW_VERSION
  #   secrets: inherit
  #   with:
  #     environment: 'prod'
  #     app_version: '${{ needs.build.outputs.app_version }}'