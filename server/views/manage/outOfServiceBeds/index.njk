{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "govuk/components/pagination/macro.njk" import govukPagination %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/button/macro.njk" import govukButton %}

{%- from "moj/components/identity-bar/macro.njk" import mojIdentityBar -%}
{%- from "moj/components/sub-navigation/macro.njk" import mojSubNavigation -%}

{% from "components/sortableTable/macro.njk" import sortableTable %}

{% extends "../../partials/layout.njk" %}

{% set pageTitle = applicationName + " - " + pageHeading %}

{% set premisesItems = convertObjectsToSelectOptions(premises, 'All premises', 'name', 'id', 'premisesId', 'all', context) %}

{% set areaAndPremisesParam = '?apAreaId=' + apAreaId + '&premisesId=' + premisesId %}

{% if disablePremisesSelect === true %}
    {% set premisesItems = [
        {
            value: "selectApArea",
            text: "Select an AP area"
        }
    ] %}
{% endif %}

{% block content %}

    <h1 class="govuk-heading-l">{{ pageHeading }}</h1>

    <form action="{{ paths.outOfServiceBeds.index({temporality: temporality}) }}" method="get"
          id="osbFilters" class="search-and-filter">
        <input type="hidden" name="_csrf" value="{{ csrfToken }}" />

        <h2 class="govuk-heading-m">Filters</h2>

        <div class="search-and-filter__row">
            {{ govukSelect({
                label: {
                    text: "AP Area",
                    classes: "govuk-label--s"
                },
                classes: "govuk-input--width-20",
                id: "apAreaId",
                name: "apAreaId",
                items: convertObjectsToSelectOptions(apAreas, 'All areas', 'name', 'id', 'apAreaId', 'all', context)
            }) }}

            {{ govukSelect({
                label: {
                    text: "Premises Name",
                    classes: "govuk-label--s"
                },
                id: "premisesId",
                name: "premisesId",
                disabled: disablePremisesSelect,
                items: premisesItems
            }) }}

            {{ govukButton({
                "name": "submit",
                "text": "Apply filters",
                "preventDoubleClick": true
            }) }}
        </div>
    </form>

    {{ mojSubNavigation({
        label: 'Sub navigation',
        items: [{
            text: 'Current',
            href: paths.outOfServiceBeds.index({temporality: 'current'}) + areaAndPremisesParam,
            active: temporality === 'current'
        }, {
            text: 'Future',
            href: paths.outOfServiceBeds.index({temporality: 'future'}) + areaAndPremisesParam,
            active: temporality === 'future'
        }, {
            text: 'Historic',
            href: paths.outOfServiceBeds.index({temporality: 'past'}) + areaAndPremisesParam,
            active: temporality === 'past'
        }]
    }) }}

    {% if outOfServiceBeds %}

        {{ sortableTable({
            caption: "Out of service beds",
            captionClasses: "govuk-table__caption--m",
            head: OutOfServiceBedUtils.allOutOfServiceBedsTableHeaders(sortBy, sortDirection, hrefPrefix),
            rows: OutOfServiceBedUtils.allOutOfServiceBedsTableRows(outOfServiceBeds)
        }) }}

        {{ govukPagination(pagination(pageNumber, totalPages, hrefPrefix)) }}

    {% endif %}
{% endblock %}

{% block extraScripts %}
    <script type="text/javascript" nonce="{{ cspNonce }}">
      document.addEventListener('DOMContentLoaded', function() {
        const allPremises = {{ allPremises | dump | safe }};
        const apAreaSelect = document.getElementById('apAreaId')
        const premisesSelect = document.getElementById('premisesId')

        apAreaSelect.addEventListener('change', function() {
          const selectedArea = apAreaSelect.options[apAreaSelect.selectedIndex].text
          premisesSelect.innerHTML = ''

          if (selectedArea === 'All areas') {
            const disabledOption = document.createElement('option')
            disabledOption.value = 'selectApArea'
            disabledOption.text = 'Select an AP area'
            premisesSelect.appendChild(disabledOption)
            premisesSelect.disabled = true
          } else {
            const filteredData = allPremises.filter(item => item.apArea.name === selectedArea)
            if (filteredData.length > 0) {

              premisesSelect.disabled = false

              const defaultOption = document.createElement('option')
              defaultOption.value = 'all'
              defaultOption.text = 'All premises'
              premisesSelect.appendChild(defaultOption)

              filteredData.forEach(item => {
                const option = document.createElement('option')
                option.value = item.id
                option.text = item.name
                premisesSelect.appendChild(option)
              })
            } else {
              premisesSelect.disabled = true
              const defaultOption = document.createElement('option')
              defaultOption.value = ''
              defaultOption.text = 'No premises available'
              premisesSelect.appendChild(defaultOption)
            }
          }
        })
      })
    </script>
{% endblock %}
